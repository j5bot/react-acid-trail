# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    branches:
      ignore:
        - gh-pages

    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: Run Tests/Coverage
          command: npm run coverage

      - run:
          name: Update CodeCov.io based on coverage results
          command: if [ $? -eq 0 ]; then bash <(curl -s https://codecov.io/bash); fi

      - run:
          name: Install JUnit coverage reporter
          command: npm install --only=dev jest-junit

      - run:
          name: Make reports directory
          command: mkdir -p reports

      - run:
          name: Run tests with JSON output
          command: npm run coverage -- --json --outputFile=reports/js-test-results.json

      - run:
          environment:
            JEST_JUNIT_OUTPUT: "reports/js-test-results.xml"
          name: Run tests with JUnit as reporter
          command: npm run test -- --runInBand --ci --reporters=default --reporters=jest-junit
          when: always

      # - run:
      #     name: Generate eslint report in JUnit format
      #     command: npm run lint -- --format junit -o reports/js-lint-results.xml
      #     when: always

      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
